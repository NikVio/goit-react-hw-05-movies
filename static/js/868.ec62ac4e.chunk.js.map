{"version":3,"file":"static/js/868.ec62ac4e.chunk.js","mappings":"+SAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVT,EAAAA,EAAAA,IAAU,8BAADU,OAA+BX,IAAW,KAAD,EAA3D,OAARO,EAAQC,EAAAI,KAAAJ,EAAAK,OAAA,SACPN,EAASO,MAAI,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,KACrB,kBAH+B,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAKnBC,EAAiB,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAMC,GAAK,IAAAd,EAAA,OAAAF,IAAAA,MAAA,SAAAiB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACnBT,EAAAA,EAAAA,IAAU,wBAADU,OACNX,EAAO,WAAAW,OAAUU,IACzC,KAAD,EAFa,OAARd,EAAQe,EAAAV,KAAAU,EAAAT,OAAA,SAGPN,EAASO,MAAI,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KACrB,gBAL6BG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAOjBO,EAAkB,eAAAC,GAAArB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqB,EAAMC,GAAO,IAAApB,EAAA,OAAAF,IAAAA,MAAA,SAAAuB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACtBT,EAAAA,EAAAA,IAAU,SAADU,OAAUgB,EAAO,aAAAhB,OAAYX,IAAW,KAAD,EAAzD,OAARO,EAAQqB,EAAAhB,KAAAgB,EAAAf,OAAA,SACPN,EAASO,MAAI,wBAAAc,EAAAb,OAAA,GAAAW,EAAA,KACrB,gBAH8BG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,KAKlBa,EAAkB,eAAAC,GAAA3B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2B,EAAML,GAAO,IAAApB,EAAA,OAAAF,IAAAA,MAAA,SAAA4B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACtBT,EAAAA,EAAAA,IAAU,SAADU,OACrBgB,EAAO,qBAAAhB,OAAoBX,IACpC,KAAD,EAFa,OAARO,EAAQ0B,EAAArB,KAAAqB,EAAApB,OAAA,SAGPN,EAASO,MAAI,wBAAAmB,EAAAlB,OAAA,GAAAiB,EAAA,KACrB,gBAL8BE,GAAA,OAAAH,EAAAf,MAAA,KAAAC,UAAA,KAOlBkB,EAAkB,eAAAC,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgC,EAAMV,GAAO,IAAApB,EAAA,OAAAF,IAAAA,MAAA,SAAAiC,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACtBT,EAAAA,EAAAA,IAAU,SAADU,OACrBgB,EAAO,qBAAAhB,OAAoBX,IACpC,KAAD,EAFa,OAARO,EAAQ+B,EAAA1B,KAAA0B,EAAAzB,OAAA,SAGPN,EAASO,MAAI,wBAAAwB,EAAAvB,OAAA,GAAAsB,EAAA,KACrB,gBAL8BE,GAAA,OAAAH,EAAApB,MAAA,KAAAC,UAAA,I,gKCzBhB,SAASuB,IACtB,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE5BI,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WAIV,KACAA,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAA/C,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA6C,EAAAC,EAAA,OAAA/C,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEYR,EAAAA,EAAAA,MAAsB,KAAD,EAAAiD,EAAA3C,EAAAI,KAAvCwC,EAAOD,EAAPC,QACRN,GAAe,SAAArC,GACb,MAAM,GAANE,QAAA0C,EAAAA,EAAAA,GAAW5C,IAAI4C,EAAAA,EAAAA,GAAKD,GACtB,IAAG5C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA8C,GAAA9C,EAAA,SAEH+C,QAAQC,IAAI,SAAS,yBAAAhD,EAAAO,OAAA,GAAAT,EAAA,kBAExB,kBATc,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAUfiC,GACF,GAAG,KAGDO,EAAAA,EAAAA,KAAA,OAAAC,SACGb,IACCY,EAAAA,EAAAA,KAAA,MAAAC,SACGb,EAAYc,KAAI,SAACC,EAAOC,GACvB,IAAQC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,GAAIC,EAAgBJ,EAAhBI,YACnB,OACEP,EAAAA,EAAAA,KAAA,MAAAC,UACEO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAxD,OAAaoD,GAAMK,MAAO,CAAEC,KAAMtB,GAAWW,SAAA,CAClDM,IACCP,EAAAA,EAAAA,KAAA,OACEa,IAAG,mCAAA3D,OAAqCqD,GACxCO,IAAKT,EACLU,MAAO,MAGVV,MATID,EAab,OAKV,C","sources":["components/MoviesService.js","components/Pages/HomePage.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '53d3f6e1440c02fced3811e600aa63b7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchDetailsMovies = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCreditsMovies = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovies = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { fetchTrendingMovies } from 'components/MoviesService';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n//import { FidgetSpinner } from 'react-loader-spinner';\n\nexport default function HomePage() {\n  const [trendMovies, setTrendMovies] = useState([]);\n  //const [IsLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (trendMovies === []) {\n      return;\n    }\n  });\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const { results } = await fetchTrendingMovies();\n        setTrendMovies(prev => {\n          return [...prev, ...results];\n        });\n      } catch (error) {\n        console.log('error');\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <div>\n      {trendMovies && (\n        <ul>\n          {trendMovies.map((movie, index) => {\n            const { title, id, poster_path } = movie;\n            return (\n              <li key={index}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {poster_path && (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                      alt={title}\n                      width={250}\n                    />\n                  )}\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":["API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","query","_context2","_x","fetchDetailsMovies","_ref3","_callee3","movieId","_context3","_x2","fetchCreditsMovies","_ref4","_callee4","_context4","_x3","fetchReviewsMovies","_ref5","_callee5","_context5","_x4","HomePage","_useState","useState","_useState2","_slicedToArray","trendMovies","setTrendMovies","location","useLocation","useEffect","getMovies","_yield$fetchTrendingM","results","_toConsumableArray","t0","console","log","_jsx","children","map","movie","index","title","id","poster_path","_jsxs","Link","to","state","from","src","alt","width"],"sourceRoot":""}