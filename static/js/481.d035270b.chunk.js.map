{"version":3,"file":"static/js/481.d035270b.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MoviesService.js","components/Pages/HomePage/HomePage.styled.js","components/Pages/MoviesPage/MoviesPage.styled.js","components/Pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '53d3f6e1440c02fced3811e600aa63b7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchDetailsMovies = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCreditsMovies = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovies = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const HomeList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 24px;\n`;\n\nexport const HomeItem = styled.li`\n  width: calc((100% - 96px) / 5);\n  height: auto;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const HomeTitlePage = styled.h1`\n  margin-left: 40px;\n  margin-bottom: 20px;\n`;\n\nexport const HomeTitle = styled.div`\n  color: #2e859e;\n  font-weight: bold;\n  line-height: 16px;\n  font-size: 16px;\n  padding: 10px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  outline: none;\n  svg {\n    fill: black;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchMovieBox = styled.div`\n  margin-top: 20px;\n`;\n\nexport const MoviesSearchPhotoBox = styled.div`\n  min-height: 414px;\n`;\n","import { BsSearch } from 'react-icons/bs';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchSearchMovies } from 'components/MoviesService';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  MoviesSearchPhotoBox,\n  SearchBtn,\n  SearchForm,\n  SearchInput,\n  SearchMovieBox,\n} from './MoviesPage.styled';\nimport { HomeItem, HomeList, HomeTitle } from '../HomePage/HomePage.styled';\n\nexport default function MoviesPage() {\n  const [isLoading, setIsloading] = useState(false);\n  const [movies, setMovie] = useState([]);\n  const [params, setParams] = useSearchParams();\n  const query = params.get('result') ?? '';\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') return;\n\n    async function getSearch() {\n      setIsloading(true);\n      try {\n        setError(false);\n        const { results } = await fetchSearchMovies(query);\n        if (!results && !query) {\n          return;\n        }\n        setMovie(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    }\n    getSearch();\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const { value } = evt.target.elements.result;\n    if (value) {\n      setParams({ result: value });\n    }\n    evt.target.reset();\n  };\n\n  return (\n    <>\n      {error && <p>Oops, something went wrong. try reloading the page</p>}\n\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchBtn type=\"submit\">\n          <BsSearch size={25} />\n        </SearchBtn>\n        <SearchInput\n          type=\"text\"\n          autoFocus\n          autoComplete=\"off\"\n          placeholder=\"Search movie\"\n          name=\"result\"\n        ></SearchInput>\n      </SearchForm>\n\n      <SearchMovieBox>\n        {isLoading && <Loader />}\n        {movies.length !== 0 && (\n          <HomeList>\n            {movies.map((movie, index) => {\n              const { original_title, id, poster_path } = movie;\n              return (\n                <HomeItem key={index}>\n                  <Link to={`${id}`} state={{ from: location }}>\n                    {poster_path && (\n                      <MoviesSearchPhotoBox>\n                        <img\n                          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                          alt={original_title}\n                          width=\"auto\"\n                        />\n                      </MoviesSearchPhotoBox>\n                    )}\n\n                    <HomeTitle>{original_title}</HomeTitle>\n                  </Link>\n                </HomeItem>\n              );\n            })}\n          </HomeList>\n        )}\n      </SearchMovieBox>\n      {movies.length === 0 && !isLoading && query !== '' && (\n        <p>Movie {query} not found.</p>\n      )}\n    </>\n  );\n}\n"],"names":["Loader","_jsx","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","query","_context2","_x","fetchDetailsMovies","_ref3","_callee3","movieId","_context3","_x2","fetchCreditsMovies","_ref4","_callee4","_context4","_x3","fetchReviewsMovies","_ref5","_callee5","_context5","_x4","HomeList","styled","_templateObject","_taggedTemplateLiteral","HomeItem","_templateObject2","HomeTitlePage","_templateObject3","HomeTitle","_templateObject4","SearchForm","SearchInput","SearchBtn","SearchMovieBox","MoviesSearchPhotoBox","_templateObject5","MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setIsloading","_useState3","_useState4","movies","setMovie","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","_useState5","_useState6","error","setError","location","useLocation","useEffect","_getSearch","_yield$fetchSearchMov","results","t0","message","finish","getSearch","_jsxs","_Fragment","children","onSubmit","evt","preventDefault","value","target","elements","result","reset","type","BsSearch","size","autoFocus","autoComplete","placeholder","name","length","map","movie","index","original_title","id","poster_path","Link","to","state","from","src","alt"],"sourceRoot":""}