{"version":3,"file":"static/js/363.3cc320e2.chunk.js","mappings":"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","sources":["components/MoviesService.js","components/Pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '53d3f6e1440c02fced3811e600aa63b7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchDetailsMovies = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCreditsMovies = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovies = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { fetchDetailsMovies } from 'components/MoviesService';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n\n  const [detailsMovie, setDetailsMovie] = useState([]);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  useEffect(() => {\n    if (detailsMovie === []) {\n      return;\n    }\n  });\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        const fetchDetails = await fetchDetailsMovies(movieId);\n        setDetailsMovie(fetchDetails);\n      } catch (error) {\n        console.log('error');\n      }\n    }\n    getDetails();\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, genres, overview } = detailsMovie;\n  return (\n    <>\n      <Link to={backLinkRef.current.state?.from ?? '/movies'}>Go back</Link>\n      {detailsMovie && (\n        <div>\n          <div>\n            {poster_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={title}\n                width={250}\n              />\n            )}\n          </div>\n          <div>\n            <h1>{title}</h1>\n            <p>User score: {Math.round(vote_average * 10)}%</p>\n            <h2>Overviev</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            {genres &&\n              genres.map((el, index) => {\n                const { name } = el;\n                return <p key={index}>{name}</p>;\n              })}\n          </div>\n          <ul>\n            <li>\n              <NavLink to=\"cast\">Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">Reviews</NavLink>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","query","_context2","_x","fetchDetailsMovies","_ref3","_callee3","movieId","_context3","_x2","fetchCreditsMovies","_ref4","_callee4","_context4","_x3","fetchReviewsMovies","_ref5","_callee5","_context5","_x4","MovieDetails","_backLinkRef$current$","_backLinkRef$current$2","useParams","_useState","useState","_useState2","_slicedToArray","detailsMovie","setDetailsMovie","location","useLocation","backLinkRef","useRef","useEffect","_getDetails","fetchDetails","t0","console","log","getDetails","poster_path","title","vote_average","genres","overview","_jsxs","_Fragment","children","_jsx","Link","to","current","state","from","src","alt","width","Math","round","map","el","index","name","NavLink","Outlet"],"sourceRoot":""}