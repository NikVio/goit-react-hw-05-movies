{"version":3,"file":"static/js/593.443f3e57.chunk.js","mappings":"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","sources":["components/MoviesService.js","components/Pages/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '53d3f6e1440c02fced3811e600aa63b7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchDetailsMovies = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCreditsMovies = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovies = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { fetchSearchMovies } from 'components/MoviesService';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [movies, setMovie] = useState([]);\n  const [params, setParams] = useSearchParams();\n  const query = params.get('result') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getSearch() {\n      try {\n        const { results } = await fetchSearchMovies(query);\n        if (!results && !query) {\n          return;\n        }\n        setMovie(results);\n      } catch (error) {\n        console.log('error');\n      }\n    }\n    getSearch();\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const { value } = evt.target.elements.result;\n    if (value) {\n      setParams({ result: value });\n    }\n    evt.target.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search movie\"\n          name=\"result\"\n        ></input>\n      </form>\n      <div>\n        {movies && (\n          <ul>\n            {movies.map((movie, index) => {\n              const { original_title, id, poster_path } = movie;\n              return (\n                <li key={index}>\n                  <Link to={`${id}`} state={{ from: location }}>\n                    {poster_path && (\n                      <img\n                        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                        alt={original_title}\n                        width={250}\n                      />\n                    )}\n                    {original_title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n      {movies.length === 0 && query && <p>Movie \"{query}\" not found.</p>}\n    </>\n  );\n}\n"],"names":["API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","query","_context2","_x","fetchDetailsMovies","_ref3","_callee3","movieId","_context3","_x2","fetchCreditsMovies","_ref4","_callee4","_context4","_x3","fetchReviewsMovies","_ref5","_callee5","_context5","_x4","MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","movies","setMovie","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","location","useLocation","useEffect","_getSearch","_yield$fetchSearchMov","results","t0","console","log","getSearch","_jsxs","_Fragment","children","_jsx","onSubmit","evt","preventDefault","value","target","elements","result","reset","type","autoComplete","placeholder","name","map","movie","index","original_title","id","poster_path","Link","to","state","from","src","alt","width","length"],"sourceRoot":""}